(function ($) {
    $.fn.responsiveSlides = function (options) {
      var settings = $.extend({
        auto: true,
        speed: 500,
        timeout: 4000,
        pager: false,
        nav: false,
        random: false,
        pause: false,
        pauseControls: true,
        prevText: "Previous",
        nextText: "Next",
        maxwidth: "",
        navContainer: "",
        manualControls: "",
        namespace: "rslides"
      }, options);
  
      return this.each(function () {
        // initialize variables
        var $this = $(this);
        var slides = $this.children();
        var slideCount = slides.length;
        var currentSlide = 0;
        var slideWidth = parseFloat(settings.maxwidth);
        var $namespace = settings.namespace + (++settings.namespaceCounter);
        var $tabs = $("<ul class='" + settings.namespace + "_tabs " + $namespace + "_tabs' />");
        var $controls = $(settings.manualControls);
        var $nav = $("<a href='#' class='" + settings.namespace + "_nav prev'>" + settings.prevText + "</a><a href='#' class='" + settings.namespace + "_nav next'>" + settings.nextText + "</a>");
        var $navContainer = $(settings.navContainer);
        var $currentSlide = slides.eq(currentSlide);
        var transitionSupported = "transition" in document.body.style;
  
        // set up slideshow
        $this.addClass(settings.namespace + " " + $namespace);
        if (settings.maxwidth) $this.css("max-width", slideWidth);
        $currentSlide.show().addClass($namespace + "_on");
        if (transitionSupported) {
          slides.show().css({
            "-webkit-transition": "opacity " + settings.speed + "ms ease-in-out",
            "-moz-transition": "opacity " + settings.speed + "ms ease-in-out",
            "-o-transition": "opacity " + settings.speed + "ms ease-in-out",
            transition: "opacity " + settings.speed + "ms ease-in-out"
          });
        }
        if (slideCount > 1) {
          if (settings.timeout < settings.speed + 100) return;
          if (settings.pager && !settings.manualControls) {
            $tabs.append(
              slides.map(function (index) {
                return "<li><a href='#' class='" + $namespace + (index + 1) + "'>" + (index + 1) + "</a></li>";
              })
            );
            $navContainer.length ? $navContainer.append($tabs) : $this.after($tabs);
          }
          if (settings.manualControls) $controls.addClass($namespace + "_tabs " + $namespace);
          if (settings.pager || settings.manualControls) {
            var $tabsAnchors = $tabs.find("a");
            var $navAnchors = $nav.find("a");
            var $navPrev = $nav.filter(".prev");
            var $navNext = $nav.filter(".next");
            var $currentTab;
            var $currentNavAnchor;
            var $nextTab;
            var $nextNavAnchor;
            var $prevTab;
            var $prevNavAnchor;
            var tabClick = function (index) {
              if (currentSlide !== index) {
                $currentSlide.removeClass($namespace + "_on").fadeOut(settings.speed, function () {
                  $currentSlide = slides.eq(index);
                  $currentSlide.addClass($namespace + "_on").fadeIn(settings.speed);
                  currentSlide = index;
                });
                if (settings.pager || settings.manualControls) {
                  $currentTab.removeClass($namespace + "_here");
                  $nextTab = $tabsAnchors.eq(index);
                  $nextTab.parent().addClass($namespace + "_here");
                  $currentNavAnchor.removeClass($namespace+ "_on");
                  $nextNavAnchor = $navAnchors.eq(index);
                  $nextNavAnchor.addClass($namespace + "_on");
                }
              }
            };
            var navClick = function (index) {
              if (settings.pauseControls) {
                clearInterval(p);
              }
              if (currentSlide + index < 0) {
                currentSlide = slideCount - 1;
              } else if (currentSlide + index > slideCount - 1) {
                currentSlide = 0;
              } else {
                currentSlide += index;
              }
              tabClick(currentSlide);
            };
            if (settings.auto) {
              var p;
              var t = function () {
                slides.stop(true, true);
                var index = currentSlide + 1 < slideCount ? currentSlide + 1 : 0;
                if (settings.pager || settings.manualControls) {
                  $nextTab = $tabsAnchors.eq(index);
                  $nextTab.parent().addClass($namespace + "_here");
                  $nextNavAnchor = $navAnchors.eq(index);
                  $nextNavAnchor.addClass($namespace + "_on");
                }
                tabClick(index);
              };
              t();
              var m = function () {
                settings.auto && clearInterval(p);
              };
              settings.pause && $this.hover(m, t);
              if (settings.pager || settings.manualControls) {
                $tabsAnchors.add($navAnchors).bind("click", function (e) {
                  e.preventDefault();
                  settings.pauseControls || m();
                  var index = $tabsAnchors.index(this);
                  tabClick(index);
                });
                $tabsAnchors.eq(0).closest("li").addClass($namespace + "_here");
                $navAnchors.eq(0).addClass($namespace + "_on");
              }
              if (settings.nav) {
                var nav = "<a href='#' class='" + $namespace + "_nav prev'>" + settings.prevText + "</a><a href='#' class='" + $namespace + "_nav next'>" + settings.nextText + "</a>";
                $navContainer.length ? $navContainer.append(nav) : $this.after(nav);
                var navPrev = $nav.filter(".prev");
                var navNext = $nav.filter(".next");
                navPrev.bind("click", function (e) {
                  e.preventDefault();
                  if (settings.pauseControls) {
                    clearInterval(p);
                  }
                  navClick(-1);
                });
                navNext.bind("click", function (e) {
                  e.preventDefault();
                  if (settings.pauseControls) {
                    clearInterval(p);
                  }
                  navClick(1);
                });
                settings.pauseControls && $nav.hover(m, t);
              }
            }
            if (settings.random) {
              slides.sort(function () {
                return Math.random() - 0.5;
              });
              $this.empty().append(slides);
            }
            if (settings.maxwidth && "undefined" === typeof document.body.style.maxWidth) {
              var H = function () {
                $this.css("width", "100%");
                $this.width() > slideWidth && $this.css("width", slideWidth);
              };
              H();
              $(window).bind("resize", function () {
                H();
              });
            }
          }
        }
      });
    };
  })(jQuery);